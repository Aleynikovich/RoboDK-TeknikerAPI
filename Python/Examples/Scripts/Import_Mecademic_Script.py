# This macro shows how to load a Mecademic script file from a text file to RoboDK
# 
## Example program:
#// Program generated by RoboDK v5.4.0
#// Using nominal kinematics.
#SetWRF(-800.000, 500.000, 100.000, -0.000, 0.000, 180.000)
#SetTRF(50.000, 0.000, 450.000, -0.000, 30.000, -0.000)
#MoveJoints(-219.536000, -114.993000, -76.945800, -70.136800, 127.814000, 81.266600)
#SetCartVel(50.000)
#MoveLin(355.200, 25.815, 36.150, -142.360, 0.000, -166.798)
#MoveLin(364.047, 124.576, 30.831, 162.204, 0.000, -162.148)


from robodk import *
from robolink import *

def Mecademic_2_Pose(xyzwpr):
    """Convert the Meca xyzwpr values to a 4x4 pose (Mat object)"""
    xyzwpr = xyzwpr[:6]
    x,y,z,rx,ry,rz = xyzwpr
    return transl(x,y,z)*rotx(rx*pi/180)*roty(ry*pi/180)*rotz(rz*pi/180)

#---------------------------
# Start the RoboDK API
RDK = Robolink()

# Ask the user to select a text file:
rdk_file_path = RDK.getParam("PATH_OPENSTATION")
script_file_path = getOpenFile(rdk_file_path + "/")
if not script_file_path:
    print("Nothing selected")
    quit()

# Get the program name from the file path
program_name = getFileName(script_file_path)
print("Loading program: " + program_name)

#if not script_file_path.lower().endswith(".txt"):
#    raise Exception("Invalid file selected. Select an SRC file.")

def GetValues(line):
    """Get all the numeric values from a line"""
    # Sample line: SetWRF(-800.000, 500.000, 100.000, -0.000, 0.000, 180.000)
    line = line.replace(",", " ")
    line = line.replace("(", " ")
    line = line.replace(")", " ")
    values = line.split(" ")

    list_values = []
    for value in values:
        try:
            value = float(value)
        except:
            continue

        list_values.append(value)
    
    return list_values

# Ask the user to select a robot (if more than a robot is available)    
robot = RDK.ItemUserPick('Select a robot',ITEM_TYPE_ROBOT)
if not robot.Valid():
    raise Exception("Robot not selected or not valid")

# Get the active reference frame
frame = robot.getLink(ITEM_TYPE_FRAME)
if not frame.Valid():
    # If there is no active reference frame, use the robot base
    frame = robot.Parent()

# Get the active tool frame
tool = robot.getLink(ITEM_TYPE_TOOL)

# Add a new program
program = RDK.AddProgram(program_name, robot)

# Turn off rendering (faster)
RDK.Render(False)

# Speed up by not showing the instruction:
program.ShowInstructions(False)

# Open the file and iterate through each line
with open(script_file_path) as f:
    count = 0
    for line in f:
        # Remove empty characters:
        line = line.strip()
        print("Loading line: " + line)

        # Get all the numeric values in order
        values = GetValues(line)

        # Increase the counter
        count = count + 1

        # Update TCP speed in mm/s
        if line.startswith("SetCartVel"):
            program.setSpeed(values[0])
            continue
            
        # Check operations that involve a pose
        if len(values) < 6:
            print("Warning! Invalid line: " + line)
            continue

        # Check what instruction we need to add:
        if line.startswith("MoveLin"):
            target = RDK.AddTarget('T%i'% count, frame)
            target.setPose(Mecademic_2_Pose(values))
            program.MoveL(target)

        # Check Joint move
        elif line.startswith("MoveJoints"):
            target = RDK.AddTarget('T%i'% count, frame)
            target.setAsJointTarget()
            target.setJoints(values)
            program.MoveJ(target)

        # Set the tool
        elif line.startswith("SetTRF"):
            pose = Mecademic_2_Pose(values)
            tool = robot.AddTool(pose, "TRF Meca")
            program.setTool(tool)

        # Set the reference frame
        elif line.startswith("SetWRF"):
            frame = RDK.AddFrame("WRF Meca", robot.Parent())
            frame.setPose(Mecademic_2_Pose(values))
            program.setFrame(frame)

# Hide the targets
program.ShowTargets(False)

# Show the instructions
program.ShowInstructions(True)

RDK.ShowMessage("Done",False)
print("Done")
